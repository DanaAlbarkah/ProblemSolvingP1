# Define the source file for the assembler program
ASSEMBLER_SRC = assembler2.c

# Define the source file for the simulator program
SIMULATOR_SRC = simulator.c

# Define the executable name for the assembler program
ASSEMBLER_EXE = assembler

# Define the executable name for the simulator program
SIMULATOR_EXE = simulator

# Define the output binary filename generated by the assembler
BIN_FILE = fibo.bin

# Default target to compile both assembler and simulator programs
all: $(ASSEMBLER_EXE) $(SIMULATOR_EXE)
# "all" target depends on both assembler and simulator executables.
# If either executable is missing or out of date, this will compile them.

# Target to compile the assembler program if assembler2.c is modified
$(ASSEMBLER_EXE): $(ASSEMBLER_SRC)
	@echo "Compiling assembler..."               # Display message for clarity
	gcc -o $(ASSEMBLER_EXE) $(ASSEMBLER_SRC)     # Compile assembler2.c into executable "assembler"

# Target to compile the simulator program if simulator.c is modified
$(SIMULATOR_EXE): $(SIMULATOR_SRC)
	@echo "Compiling simulator..."               # Display message for clarity
	gcc -o $(SIMULATOR_EXE) $(SIMULATOR_SRC)     # Compile simulator.c into executable "simulator"

# Target to run the assembler program with an input file specified by FILENAME
assemble: $(ASSEMBLER_EXE)
	@echo "Running assembler with input file $(FILENAME)..."  # Display message for clarity
	./$(ASSEMBLER_EXE) $(FILENAME) $(BIN_FILE)    # Run assembler, taking input file as FILENAME and generating fibo.bin

# Target to run the simulator program with the binary file generated by the assembler
simulate: $(SIMULATOR_EXE)
	@echo "Running simulator with binary file $(BIN_FILE)..."  # Display message for clarity
	./$(SIMULATOR_EXE) $(BIN_FILE)              # Run simulator, taking fibo.bin as input

# Target to run the entire process in sequence: compile, assemble, and simulate
run_all: all assemble simulate
	@echo "Assemble and simulate completed."   # Display message indicating the end of the process

# Target to remove compiled executables and generated binary files
clean:
	@echo "Cleaning up..."                    # Display message for clarity
	rm -f $(ASSEMBLER_EXE) $(SIMULATOR_EXE) $(BIN_FILE)  # Remove assembler and simulator executables and fibo.bin file

# Target to display help information about the Makefile and its usage
help:
	@echo "Makefile Usage:"                   # Display title for help section
	@echo "  make               - Compile both assembler and simulator"    # Instruction for "make all"
	@echo "  make assemble FILENAME=<input_file> - Run assembler with specified input file" # Instruction for "make assemble"
	@echo "  make simulate      - Run simulator with binary file generated by assembler"   # Instruction for "make simulate"
	@echo "  make run_all FILENAME=<input_file> - Compile, assemble, and simulate in one step" # Instruction for "make run_all"
	@echo "  make clean         - Remove all generated files"              # Instruction for "make clean"
	@echo "  make help          - Display this help message"               # Instruction for "make help"

